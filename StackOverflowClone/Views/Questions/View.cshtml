@model StackOverflowClone.ViewModels.QuestionViewModel

@{
    ViewBag.Title = Model.QuestionName;
    Layout = "~/Views/Shared/_LayoutPage2.cshtml";
}

<div class="row">
    <div class="col-10 p-0">
        <p class="content-question-title">
            @Model.QuestionName
        </p>
    </div>
    <div class="col-2 p-0 text-end mt-4">
        @if (Session["CurrentUserName"] == null)
        {
            <a href="/account/login" class="btn-inline-blue text-decoration-none">Ask Question</a>
        }
        @if (Session["CurrentUserName"] != null)
        {
            <a href="/questions/createquestion" class="btn-inline-blue text-decoration-none">Ask Question</a>

        }
    </div>
</div>
<div class="d-flex flex-wrap mb-3">
    <p class="font-gray13 flex-nowrap me-4 mb-3">
        Asked  <span id="postedTime" class="font-black13 ms-1">@Model.QuestionDateAndTime</span>
    </p>
    <p class="font-gray13 flex-nowrap me-4 mb-3">
        Viewed  <span class="font-black13 ms-1">@Model.ViewsCount times</span>
    </p>
</div>
<hr style="color: #636B74;">
<div class="row pt-2">
    <div class="col-9 pe-4">
        <div class="row">
            <div class="col-1 ps-0 d-flex flex-column justify-content-start align-items-center">
                @if (Session["CurrentUserName"] != null && Convert.ToInt32(Session["CurrentUserID"]) != Model.UserID)
                {
                    if (Model.CurrentUserVoteType == 1)
                    {
                        <!-- Button vote color -->
                        <button class="btn-vote-color-up btn-up-vote-question" data-questionid="@Model.QuestionID">
                            <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#e7710c" d="M1 12h16L9 4l-8 8Z"></path></svg>
                        </button>
                        <span class="vote-question-count content-vote-count py-3" data-questionid="@Model.QuestionID">@Model.VoteCount</span>
                        <button class="btn-vote-down btn-down-vote-question" data-questionid="@Model.QuestionID">
                            <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 6h16l-8 8-8-8Z"></path></svg>
                        </button>
                    }
                    else if (Model.CurrentUserVoteType == -1)
                    {
                        <button class="btn-vote-up btn-up-vote-question" data-questionid="@Model.QuestionID">
                            <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 12h16L9 4l-8 8Z"></path></svg>
                        </button>
                        <span class="vote-question-count content-vote-count py-3" data-questionid="@Model.QuestionID">@Model.VoteCount</span>
                        <button class="btn-vote-color-down btn-down-vote-question" data-questionid="@Model.QuestionID">
                            <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#e7710c" d="M1 6h16l-8 8-8-8Z"></path></svg>
                        </button>
                    }
                    else
                    {
                        <button class="btn-vote-up btn-up-vote-question" data-questionid="@Model.QuestionID">
                            <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 12h16L9 4l-8 8Z"></path></svg>
                        </button>
                        <span class="vote-question-count content-vote-count py-3" data-questionid="@Model.QuestionID">@Model.VoteCount</span>
                        <button class="btn-vote-down btn-down-vote-questione" data-questionid="@Model.QuestionID">
                            <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 6h16l-8 8-8-8Z"></path></svg>
                        </button>
                    }
                }
                @if (Session["CurrentUserName"] == null)
                {
                    <button class="btn-vote-up btn-up-vote-question" data-questionid="@Model.QuestionID">
                        <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 12h16L9 4l-8 8Z"></path></svg>
                    </button>
                    <span class="vote-question-count content-vote-count py-3" data-questionid="@Model.QuestionID">@Model.VoteCount</span>
                    <button class="btn-vote-down btn-down-vote-question" data-questionid="@Model.QuestionID">
                        <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 6h16l-8 8-8-8Z"></path></svg>
                    </button>
                }
            </div>
            <div class="col">
                <div class="row">
                    <div class="col-12 mb-4">
                        <p class="font-black15 ps-2">@Model.QuestionContent</p>
                    </div>
                    <div class="col-12">
                        <a href="/categories/view/@Model.CategoryID" class="question-tags">@Model.Category.CategoryName</a>
                    </div>
                    <div class="col my-4 p-0 d-flex justify-content-end">
                        <div class="question-user-info">
                            <p class="font-gray13 mb-2 fw-normal">asked @Model.QuestionDateAndTime</p>
                            <div class="d-flex align-items-center">
                                <img src="https://www.gravatar.com/avatar/4bf8226f1b18a595958037b0e6f221c4?s=48&d=identicon&r=PG" class="rounded me-3" alt="" srcset="" width="32px" height="32px">
                                @if (Convert.ToInt32(Session["CurrentUserID"]) != Model.UserID)
                                {
                                    <a href="/account/profile/@Model.UserID" class="font-black13 fc-blue-hover text-decoration-none">@Model.User.Name</a>
                                }
                                else
                                {
                                    <a href="#" class="font-black13 fc-blue-hover text-decoration-none">you</a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row pt-5 mb-3">
            <div class="col-9">
                <h1 class="font-black19 fw-normal p-0">@Model.AnswersCount Answers</h1>
            </div>
            <div class="col-3 text-end">
                <div class="btn-group btn-group-lg" role="group" aria-label="Basic radio toggle button group">
                    <input type="radio" class="btn-check" name="btnradio" id="btnradio1" autocomplete="off" checked>
                    <label class="btn btn-light font-black13 p-3 px-4 border border-secondary-subtle" for="btnradio1">Newest</label>

                    <input type="radio" class="btn-check" name="btnradio" id="btnradio2" autocomplete="off">
                    <label class="btn btn-light font-black13 p-3 px-4 border border-secondary-subtle" for="btnradio2">Oldest</label>
                </div>
            </div>
        </div>
        @for (int i=0; i < Model.Answers.Count; i++)
        {
            <div class="row pt-3">
                <div class="col-1 ps-0 d-flex flex-column justify-content-start align-items-center">
                    @if (Session["CurrentUserName"] != null && Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID)
                    {
                        if (Model.Answers[i].CurrentUserVoteType == 1)
                        {
                            <!-- Button vote color -->
                            <button class="btn-vote-color-up btn-up-vote" data-answerid="@Model.Answers[i].AnswerID">
                                <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#e7710c" d="M1 12h16L9 4l-8 8Z"></path></svg>
                            </button>
                            <span class="content-vote-count py-3" data-answerid="@Model.Answers[i].AnswerID">@Model.Answers[i].VoteCount</span>
                            <button class="btn-vote-down btn-down-vote" data-answerid="@Model.Answers[i].AnswerID">
                                <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 6h16l-8 8-8-8Z"></path></svg>
                            </button>
                            @*if (Model.UserID == Convert.ToInt32(Session["CurrentUserID"]) && Model.AnswerID == null)
                            {
                                <button class="btn-accept-answer mt-3" data-answerid="@Model.Answers[i].AnswerID">
                                    <svg aria-hidden="true" class="svg-icon js-svg" width="36" height="36" viewBox="0 0 36 36"><path d="m6 14 8 8L30 6v8L14 30l-8-8v-8Z"></path></svg>
                                </button>
                            }
                            else if (Model.AnswerID == Model.Answers[i].AnswerID)
                            {
                                <button class="btn-accept-answer-green mt-3" data-answerid="@Model.Answers[i].AnswerID">
                                    <svg aria-hidden="true" class="svg-icon js-svg" width="36" height="36" viewBox="0 0 36 36"><path d="m6 14 8 8L30 6v8L14 30l-8-8v-8Z"></path></svg>
                                </button>
                            }*@
                        }
                        else if (Model.Answers[i].CurrentUserVoteType == -1)
                        {
                            <button class="btn-vote-up btn-up-vote" data-answerid="@Model.Answers[i].AnswerID">
                                <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 12h16L9 4l-8 8Z"></path></svg>
                            </button>
                            <span class="content-vote-count py-3" data-answerid="@Model.Answers[i].AnswerID">@Model.Answers[i].VoteCount</span>
                            <button class="btn-vote-color-down btn-down-vote" data-answerid="@Model.Answers[i].AnswerID">
                                <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#e7710c" d="M1 6h16l-8 8-8-8Z"></path></svg>
                            </button>
                            @*if (Model.UserID == Convert.ToInt32(Session["CurrentUserID"]) && Model.AnswerID == null)
                            {
                                <button class="btn-accept-answer mt-3" data-answerid="@Model.Answers[i].AnswerID">
                                    <svg aria-hidden="true" class="svg-icon js-svg" width="36" height="36" viewBox="0 0 36 36"><path d="m6 14 8 8L30 6v8L14 30l-8-8v-8Z"></path></svg>
                                </button>
                            }
                            else if (Model.AnswerID == Model.Answers[i].AnswerID)
                            {
                                <button class="btn-accept-answer-green mt-3" data-answerid="@Model.Answers[i].AnswerID">
                                    <svg aria-hidden="true" class="svg-icon js-svg" width="36" height="36" viewBox="0 0 36 36"><path d="m6 14 8 8L30 6v8L14 30l-8-8v-8Z"></path></svg>
                                </button>
                            }*@
                        }
                        else
                        {
                            <button class="btn-vote-up btn-up-vote" data-answerid="@Model.Answers[i].AnswerID">
                                <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 12h16L9 4l-8 8Z"></path></svg>
                            </button>
                            <span class="content-vote-count py-3" data-answerid="@Model.Answers[i].AnswerID">@Model.Answers[i].VoteCount</span>
                            <button class="btn-vote-up btn-down-vote" data-answerid="@Model.Answers[i].AnswerID">
                                <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 6h16l-8 8-8-8Z"></path></svg>
                            </button>
                            @*if (Model.UserID == Convert.ToInt32(Session["CurrentUserID"]) && Model.AnswerID == null)
                            {
                                <button class="btn-accept-answer mt-3" data-answerid="@Model.Answers[i].AnswerID">
                                    <svg aria-hidden="true" class="svg-icon js-svg" width="36" height="36" viewBox="0 0 36 36"><path d="m6 14 8 8L30 6v8L14 30l-8-8v-8Z"></path></svg>
                                </button>
                            }
                            else if (Model.AnswerID == Model.Answers[i].AnswerID)
                            {
                                <button class="btn-accept-answer-green mt-3" data-answerid="@Model.Answers[i].AnswerID">
                                    <svg aria-hidden="true" class="svg-icon js-svg" width="36" height="36" viewBox="0 0 36 36"><path d="m6 14 8 8L30 6v8L14 30l-8-8v-8Z"></path></svg>
                                </button>
                            }*@
                        }
                    }
                    @if (Session["CurrentUserName"] == null)
                    {
                        <button class="btn-vote-up btn-up-vote" data-answerid="@Model.Answers[i].AnswerID">
                            <svg aria-hidden="true" class="svg-icon iconArrowUp" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 12h16L9 4l-8 8Z"></path></svg>
                        </button>
                        <span class="content-vote-count py-3" data-answerid="@Model.Answers[i].AnswerID">@Model.Answers[i].VoteCount</span>
                        <button class="btn-vote-down btn-down-vote" data-answerid="@Model.Answers[i].AnswerID">
                            <svg aria-hidden="true" class="svg-icon iconArrowDown" width="18" height="18" viewBox="0 0 18 18"><path fill="#242729" d="M1 6h16l-8 8-8-8Z"></path></svg>
                        </button>
                    }

                </div>
                <div class="col">
                    <div class="row">
                        @if (Convert.ToInt32(Session["CurrentUserID"]) != Model.Answers[i].UserID || Session["CurrentUserName"] == null)
                        {
                            <div class="col-12 mb-4">
                                <p class="font-black15 ps-2">@Model.Answers[i].AnswerText</p>
                            </div>
                            <div class="col mb-4 mt-2 p-0 d-flex justify-content-end">
                                <div class="question-user-info" style="background-color: #fffefe;">
                                    <p class="font-gray13 mb-2 fw-normal">answered @Model.Answers[i].AnswerDateAndTime</p>
                                    <div class="d-flex align-items-center">
                                        <img src="https://www.gravatar.com/avatar/4bf8226f1b18a595958037b0e6f221c4?s=48&d=identicon&r=PG" class="rounded me-3" alt="" srcset="" width="32px" height="32px">
                                        <a href="/account/profile/@Model.Answers[i].UserID" class="font-black13 fc-blue-hover text-decoration-none">@Model.Answers[i].User.Name</a>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-12 mb-4 answer-content">
                                <p class="font-black15 ps-2">@Model.Answers[i].AnswerText</p>
                            </div>
                            <div class="col-8 ms-4 mb-4 mt-2 p-0">
                                <button class="font-gray13 btn-func-link button-edit mt-3 mb-2">Edit</button>
                                <button class="font-gray13 fc-red-hover btn-func-link mt-3 mb-2">Delete</button>
                                <form class="needs-validation hidden mt-3" novalidate="novalidate" action="/questions/editanswer" method="post">
                                    <div class="col-12 mb-3">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" name="AnswerID" value="@Model.Answers[i].AnswerID" />
                                        <input type="hidden" name="QuestionID" value="@Model.Answers[i].QuestionID" />
                                        <div class="mb-3">
                                            <textarea class="form-control font-black13 fs-5 border border-secondary-subtle p-3" rows="10" placeholder="Enter answer with minium 30 characters." name="AnswerText">@Model.Answers[i].AnswerText</textarea>
                                        </div>
                                    </div>
                                    <div class="col-12 mb-5">
                                        <button type="submit" class="btn-inline-blue">Update Answer</button>
                                        <button class="btn-outline-blue ms-2 button-cancel-update">Cancel</button>
                                    </div>
                                </form>
                            </div>
                            <div class="col-3 ms-4 mb-4 mt-2 p-0">
                                <div class="question-user-info" style="background-color: #fffefe;">
                                    <p class="font-gray13 mb-2 fw-normal">answered @Model.Answers[i].AnswerDateAndTime</p>
                                    <div class="d-flex align-items-center">
                                        <img src="https://www.gravatar.com/avatar/4bf8226f1b18a595958037b0e6f221c4?s=48&d=identicon&r=PG" class="rounded me-3" alt="" srcset="" width="32" height="32">
                                        <a href="/account/profile/@Convert.ToInt32(Session["CurrentUserID"])" class="font-black13 fc-blue-hover text-decoration-none">you</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        <form class="need-validation" novalidate="novalidate" action="/questions/addanswer" method="post">
            <div class="row">
                <div class="col-12 mb-3">
                    <h1 class="font-black19 fw-normal p-0">Your Answer</h1>
                </div>
                <div class="col-12 mb-5">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="QuestionID" value="@Model.QuestionID"/>
                    <textarea class="form-control font-black13 fs-5 border border-secondary-subtle p-3" rows="10" id="txtAnswer" placeholder="Enter answer with minium 30 characters." name="AnswerText"></textarea>
                </div>
                <div class="col-12 mb-5">
                    <button type="submit" class="btn-inline-blue text-decoration-none">Post Your Answer</button>
                </div>
            </div>
        </form>
            
    </div>
    <div class="col-3">
        <div class="card border-warning-subtle">
            <div class="card-header bg-warning-subtle fw-bold fs-5 py-3 border-warning-subtle">
                The Overflow Blog
            </div>
            <div class="card-body bg-warning bg-opacity-10 border-warning-subtle py-4">
                <a href="#" class="content-note-link">
                    <i class="bi bi-pen pe-2" style="color: #1a75d1;"></i>
                    Sending bugs back in time
                </a>
            </div>
        </div>
        <div class="card border-warning-subtle">
            <div class="card-header bg-warning-subtle fs-5 fw-bold py-3  border-warning-subtle">
                Featured on Meta
            </div>
            <div class="card-body bg-warning bg-opacity-10 py-4">
                <a href="#" class="content-note-link">
                    <i class="bi bi-chat-left pe-2" style="color: #1a75d1;"></i>
                    Sites can now request to enable a banner to warn about their policy on AI-generated content
                </a> <br>
                <a href="#" class="content-note-link">
                    <img src="~/Content/assets/img/stack-overflow.png" class="me-2" alt="Icon Stack Overfow" style="width: 12px; height: 12px;">
                    Temporary policy: Generative AI (e.g., ChatGPT) is banned
                </a> <br>
                <a href="#" class="content-note-link">
                    <img src="~/Content/assets/img/stack-overflow.png" class="me-2" alt="Icon Stack Overfow" style="width: 12px; height: 12px;">
                    January 2024 post from Ryan Polk, Chief Product Officer
                </a>
            </div>
        </div>

        <div class="mt-4 card">
            <div class="card-header fs-4 font-tag-black600 py-3 bg-secondary bg-opacity-10">
                Custom Filters
            </div>
            <div class="card-body py-4">
                <a href="#" class="text-decoration-none font-tag-black600 text-primary">Create a custom filter</a>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script>
    $("a[href='/questions/view/']").parent().attr('id', 'active')

    // Lấy ngày giờ hiện tại
    var currentDate = new Date();

    // Lấy thời gian đăng câu hỏi từ ViewBag và chuyển đổi thành đối tượng Date
    var postedTime = new Date("@Model.QuestionDateAndTime");

    // Tính thời gian đã trôi qua
    var timeDifference = currentDate - postedTime;

    // Chuyển đổi thời gian sang định dạng "ago"
    var agoTime = calculateAgoTime(timeDifference);

    // Hiển thị thời gian đã chuyển đổi lên giao diện
    document.getElementById("postedTime").innerText = agoTime;

    // Hàm tính thời gian "ago"
    function calculateAgoTime(milliseconds) {
        var seconds = Math.floor(milliseconds / 1000);
        var minutes = Math.floor(seconds / 60);
        var hours = Math.floor(minutes / 60);
        var days = Math.floor(hours / 24);

        if (days > 0) {
            return days + " days ago";
        } else if (hours > 0) {
            return hours + " hours ago";
        } else if (minutes > 0) {
            return minutes + " minutes ago";
        } else {
            return seconds + " seconds ago";
        }
    }

    //Vote-answer

    $(".btn-up-vote").click(function () {
        var btnUp = $(this);
        var btnDown = btnUp.parent().find(".btn-down-vote");
        const userID = '@Session["CurrentUserID"]';
        const voteType = 1;

        if (!userID) {
            window.location.href = "/account/login";
            return;
        }

        $.ajax({
            url: "/api/questions?answerid=" + btnUp.attr("data-answerid") + "&value=" + voteType + "&UserID=@Session["CurrentUserID"]",
            type: "POST",
            success: function () {
                btnUp.attr("class", "btn-vote-color-up");
                btnDown.attr("class", "btn-vote-down");
                location.reload();
            }
        });
    });

    $(".btn-down-vote").click(function () {
        var btnDown = $(this);
        var btnUp = btnDown.parent().find(".btn-up-vote");
        const answerId = $(this).attr("data-answerid");
        const userID = '@Session["CurrentUserID"]';
        const voteType = -1;

        if (!userID) {
            window.location.href = "/account/login";
            return;
        }

        $.ajax({
            url: "/api/questions?answerid=" + btnUp.attr("data-answerid") + "&value=" + voteType + "&UserID=@Session["CurrentUserID"]",
            type: "POST",
            success: function () {
                btnDown.attr("class", "btn-vote-color-down");
                btnUp.attr("class", "btn-vote-up");
                location.reload();
            }
        });
    });

    //Vote question
    $(".btn-up-vote-question").click(function () {
        var btnUp = $(this);
        var btnDown = btnUp.parent().find(".btn-down-vote-question");
        const userID = "@Session["CurrentUserID"]";
        const voteType = 1;

        console.log(btnUp)

        if (!userID) {
            window.location.href = "/account/login";
            return;
        }

            $.ajax({
                url: "/api/questions?questionid=" + btnUp.attr("data-questionid") + "&value=" + voteType + "&UserID=" + userID,
            type: "POST",
            success: function () {
                btnUp.attr("class", "btn-vote-color-up");
                btnDown.attr("class", "btn-vote-down");
                location.reload();

                console.log(btnUp)
            }
        });
    });

    $(".btn-down-vote-question").click(function () {
        var btnDown = $(this);
        var btnUp = btnDown.parent().find(".btn-up-vote-question");
        const questionId = $(this).attr("data-questionid");
        const userID = "@Session["CurrentUserID"]";
        const voteType = -1;

        console.log(btnDown)


        if (!userID) {
            window.location.href = "/account/login";
            return;
        }

        $.ajax({
            url: "/api/questions?questionid=" + btnUp.attr("data-questionid") + "&value=" + voteType + "&UserID=" + userID,
            type: "POST",
            success: function () {
                btnDown.attr("class", "btn-vote-color-down");
                btnUp.attr("class", "btn-vote-up");
                location.reload();
            }
        });
    });


    //Accept Answer
    /*$(".btn-accept-answer").click(function () {
        var btnAccept = $(this)
        var answerId = btnAccept.attr("data-answerid");
        $.ajax({
            url: "/question/accept?answerid=" + answerId,
            type: "POST",
            success: function () {
                btnAccept.removeClass("btn-accept-answer")
                btnAccept.addClass("btn-accept-answer-green")
                location.reload()
            }
        })
    })*/


    //Edit Answer
    $(".button-edit").click(function () {
        $(this).closest('.col').find('.answer-content').hide();
        $(this).parent().find(".needs-validation").show();
        $(this).hide();
        $(this).closest('.col').find('.btn-func-link').hide();
        console.log($(this).closest('.col').find('.answer-content'))
    });

    $(".button-cancel-update").click(function (e) {
        e.preventDefault();
        $(this).closest('.col').find('.answer-content').show();
        $(this).closest('form').hide();
        $(this).closest('.col').find('.btn-func-link').show()
    })
</script>